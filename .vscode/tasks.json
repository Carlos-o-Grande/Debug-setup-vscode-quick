{
	"tasks": [
		// this task runs "cc". args[] is used to setup command options.
		// in this example: cc -fdiagnostics-color=always -g3 ${file} -o ${fileDirname}/ballons.out
		// ${file} is the active file on the editor.
		// For this example can be explicity replaced with main.c
		// the "label": "cc build" is how launch.json identifies the task to run
		{
			"type": "cppbuild",
			"label": "C/C++: cc build active file",
			"command": "/usr/bin/cc",
			"args": [
				"-fdiagnostics-color=always",
				"-g",
				// "-O2",
				"${fileBasename}",
				"-o",
				"${fileDirname}/${fileBasenameNoExtension}.out"
			],
			"options": {
				"cwd": "${fileDirname}"
			},
			"problemMatcher": [
				"$gcc"
			],
			"group": "build",
			"detail": "Task generated by Debugger."
		},
		{
			"type": "cppbuild",
			"label": "cc build with Fsanatize",
			"command": "/usr/bin/cc",
			"args": [
				"-fdiagnostics-color=always",
				"-g3",
				"-fsanitize=address",
				"${file}",
				"-o",
				"${fileDirname}/${fileBasenameNoExtension}.out"
			],
			"options": {
				"cwd": "${fileDirname}"
			},
			"problemMatcher": [
				"$gcc"
			],
			"group": "build",
			"detail": "Task generated by Debugger."
		},
		// this task runs 'make debug'. see Makefile file and 'Makefile & Launch' in launch.json
		{
			"type": "cppbuild",
			"label": "Makefile",
			"command": "make",
			"args": [
				"debug"
			],
			"options": {
				"cwd": "${fileDirname}",
				"program": "a.out"
			},
			"problemMatcher": [
				"$gcc"
			],
			"group": {
				"kind": "build",
				"isDefault": true
			},
			"detail": "run makefile"
		},
	],
	"version": "2.0.0"
}
